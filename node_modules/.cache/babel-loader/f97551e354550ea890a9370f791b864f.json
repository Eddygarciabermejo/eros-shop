{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Eddi\\\\Documents\\\\Proyectos\\\\DS2\\\\Eros-Shop\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eddi\\\\Documents\\\\Proyectos\\\\DS2\\\\Eros-Shop\\\\Nueva carpeta\\\\src\\\\components\\\\features\\\\sidebar\\\\shop-filter.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport InputRange from 'react-input-range';\nimport { SlideToggle } from 'react-slide-toggle';\nimport { Link } from 'react-router-dom';\nimport 'react-input-range/lib/css/index.css';\nimport _data from '../../../mock_data/data';\nimport { getCountByCategory } from '../../../services';\nimport { toggleCategoryFilter, resetFilter, toggleSizeFilter, toggleBrandFilter, toggleColorFilter, filterPrice } from '../../../actions';\nimport { findIndex } from '../../../utils';\n\nfunction ShopFilter(props) {\n  var _this = this;\n\n  var _useState = useState({\n    max: 1000,\n    min: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var sizes = [\"XS\", \"S\", \"M\", \"L\", \"XL\", \"XXL\"];\n  var brands = [\"Next\", \"River Island\", \"Geox\", \"New Balance\", \"UGG\", \"F&F\", \"Nike\"];\n  var colors = [\"#b87145\", \"#f0c04a\", \"#333333\", \"#cc3333\", \"#3399cc\", \"#669933\", \"#f2719c\", \"#ebebeb\"];\n  var categoryCountsArr = [];\n\n  _data.categories.wears.map(function (item, index) {\n    categoryCountsArr.push(getCountByCategory(props.products.slice(0, props.numbers), item.name));\n    return null;\n  });\n\n  function changeIcon(e) {\n    if (e.target.classList.contains('collapsed')) e.target.classList.remove('collapsed');else e.target.classList.add('collapsed');\n  }\n\n  function clearAll(e) {\n    var items = document.querySelector('.sidebar-shop').querySelectorAll('input');\n\n    for (var i = 0; i < items.length; i++) {\n      items[i].checked = false;\n    }\n\n    items = document.querySelector('.sidebar-shop').querySelectorAll('.selected');\n\n    for (var _i = 0; _i < items.length; _i++) {\n      items[_i].classList.remove('selected');\n    }\n\n    setValue({\n      max: 1000,\n      min: 0\n    });\n    props.resetFilter();\n    e.preventDefault();\n  }\n\n  return /*#__PURE__*/React.createElement(\"aside\", {\n    className: \"sidebar-shop sidebar-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar-filter-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"widget widget-clean\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"Filters:\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#a\",\n    className: \"sidebar-filter-clear\",\n    onClick: clearAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Clean All\")), /*#__PURE__*/React.createElement(SlideToggle, {\n    collapsed: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, function (_ref) {\n    var onToggle = _ref.onToggle,\n        setCollapsibleElement = _ref.setCollapsibleElement;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"widget widget-collapsible\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"widget-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#category\",\n      onClick: function onClick(e) {\n        onToggle(e);\n        changeIcon(e);\n        e.preventDefault();\n      },\n      role: \"button\",\n      \"aria-expanded\": \"true\",\n      \"aria-controls\": \"widget-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 33\n      }\n    }, \"Category\")), /*#__PURE__*/React.createElement(\"div\", {\n      ref: setCollapsibleElement,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"widget-body\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-items filter-items-count\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 37\n      }\n    }, _data.categories.wears.map(function (item, index) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filter-item\",\n        key: \"cat\" + index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-control custom-checkbox\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        className: \"custom-control-input\",\n        id: \"cat-\".concat(index + 1),\n        onClick: function onClick(e) {\n          return props.toggleCategoryFilter(item.name);\n        },\n        defaultChecked: -1 < findIndex(props.filters[\"category\"], function (filter) {\n          return filter === item.name;\n        }) ? true : false,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 57\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"custom-control-label\",\n        htmlFor: \"cat-\".concat(index + 1),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 57\n        }\n      }, item.name)), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"item-count\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 53\n        }\n      }, categoryCountsArr[index]));\n    })))));\n  }), /*#__PURE__*/React.createElement(SlideToggle, {\n    collapsed: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, function (_ref2) {\n    var onToggle = _ref2.onToggle,\n        setCollapsibleElement = _ref2.setCollapsibleElement;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"widget widget-collapsible\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"widget-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#Size\",\n      onClick: function onClick(e) {\n        onToggle(e);\n        changeIcon(e);\n        e.preventDefault();\n      },\n      role: \"button\",\n      \"aria-expanded\": \"true\",\n      \"aria-controls\": \"widget-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 33\n      }\n    }, \"Size\")), /*#__PURE__*/React.createElement(\"div\", {\n      ref: setCollapsibleElement,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"widget-body\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-items\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 37\n      }\n    }, sizes.map(function (item, index) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filter-item\",\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-control custom-checkbox\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        className: \"custom-control-input\",\n        id: \"size-\".concat(index + 1),\n        onClick: function onClick(e) {\n          return props.toggleSizeFilter(item);\n        },\n        defaultChecked: -1 < findIndex(props.filters[\"size\"], function (filter) {\n          return filter === item;\n        }) ? true : false,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"custom-control-label\",\n        htmlFor: \"size-\".concat(index + 1),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 53\n        }\n      }, item)));\n    })))));\n  }), /*#__PURE__*/React.createElement(SlideToggle, {\n    collapsed: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, function (_ref3) {\n    var onToggle = _ref3.onToggle,\n        setCollapsibleElement = _ref3.setCollapsibleElement;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"widget widget-collapsible\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"widget-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#colour\",\n      onClick: function onClick(e) {\n        onToggle(e);\n        changeIcon(e);\n        e.preventDefault();\n      },\n      role: \"button\",\n      \"aria-expanded\": \"true\",\n      \"aria-controls\": \"widget-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }\n    }, \"Colour\")), /*#__PURE__*/React.createElement(\"div\", {\n      ref: setCollapsibleElement,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"widget-body\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-colors\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 37\n      }\n    }, colors.map(function (item, index) {\n      return /*#__PURE__*/React.createElement(Link, {\n        to: \"#\",\n        key: index,\n        className: -1 < findIndex(props.filters[\"color\"], function (filter) {\n          return filter === item;\n        }) ? \"selected\" : \"\",\n        style: {\n          background: item\n        },\n        onClick: function onClick(e) {\n          props.toggleColorFilter(item);\n          e.preventDefault();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"sr-only\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 53\n        }\n      }, \"Color Name\"));\n    })))));\n  }), /*#__PURE__*/React.createElement(SlideToggle, {\n    collapsed: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, function (_ref4) {\n    var onToggle = _ref4.onToggle,\n        setCollapsibleElement = _ref4.setCollapsibleElement;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"widget widget-collapsible\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"widget-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#brand\",\n      onClick: function onClick(e) {\n        onToggle(e);\n        changeIcon(e);\n        e.preventDefault();\n      },\n      role: \"button\",\n      \"aria-expanded\": \"true\",\n      \"aria-controls\": \"widget-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 58\n      }\n    }, \"Brand\")), /*#__PURE__*/React.createElement(\"div\", {\n      ref: setCollapsibleElement,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"widget-body\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-items\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 37\n      }\n    }, brands.map(function (item, index) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filter-item\",\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-control custom-checkbox\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        className: \"custom-control-input\",\n        id: \"brand-\".concat(index + 1),\n        onClick: function onClick(e) {\n          return props.toggleBrandFilter(item);\n        },\n        defaultChecked: -1 < findIndex(props.filters[\"brand\"], function (filter) {\n          return filter === item;\n        }) ? true : false,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"custom-control-label\",\n        htmlFor: \"brand-\".concat(index + 1),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 53\n        }\n      }, item)));\n    })))));\n  }), /*#__PURE__*/React.createElement(SlideToggle, {\n    collapsed: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, function (_ref5) {\n    var onToggle = _ref5.onToggle,\n        setCollapsibleElement = _ref5.setCollapsibleElement;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"widget widget-collapsible\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"widget-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#price\",\n      onClick: function onClick(e) {\n        onToggle(e);\n        changeIcon(e);\n        e.preventDefault();\n      },\n      role: \"button\",\n      \"aria-expanded\": \"true\",\n      \"aria-controls\": \"widget-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 33\n      }\n    }, \"Price\")), /*#__PURE__*/React.createElement(\"div\", {\n      ref: setCollapsibleElement,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"widget-body\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-price\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-price-text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 41\n      }\n    }, \"Price Range:\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"filter-price-range\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 45\n      }\n    }, \"$\", value.min, \" - $\", value.max)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"price-slider\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(InputRange, {\n      formatLabel: function formatLabel(value) {\n        return \"$\".concat(value);\n      },\n      maxValue: 1000,\n      minValue: 0,\n      step: 100,\n      value: value,\n      onChange: function onChange(value) {\n        setValue(value);\n        props.filterPrice(value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 45\n      }\n    }))))));\n  })));\n}\n\nexport var mapStateToProps = function mapStateToProps(state, props) {\n  return {\n    filters: state.filters,\n    products: state.data.products ? state.data.products : []\n  };\n};\nexport default connect(mapStateToProps, {\n  toggleCategoryFilter: toggleCategoryFilter,\n  toggleSizeFilter: toggleSizeFilter,\n  toggleBrandFilter: toggleBrandFilter,\n  toggleColorFilter: toggleColorFilter,\n  filterPrice: filterPrice,\n  resetFilter: resetFilter\n})(ShopFilter);","map":{"version":3,"sources":["C:/Users/Eddi/Documents/Proyectos/DS2/Eros-Shop/Nueva carpeta/src/components/features/sidebar/shop-filter.jsx"],"names":["React","useState","connect","InputRange","SlideToggle","Link","_data","getCountByCategory","toggleCategoryFilter","resetFilter","toggleSizeFilter","toggleBrandFilter","toggleColorFilter","filterPrice","findIndex","ShopFilter","props","max","min","value","setValue","sizes","brands","colors","categoryCountsArr","categories","wears","map","item","index","push","products","slice","numbers","name","changeIcon","e","target","classList","contains","remove","add","clearAll","items","document","querySelector","querySelectorAll","i","length","checked","preventDefault","onToggle","setCollapsibleElement","filters","filter","background","mapStateToProps","state","data"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport InputRange from 'react-input-range';\r\nimport { SlideToggle } from 'react-slide-toggle';\r\nimport { Link } from 'react-router-dom';\r\nimport 'react-input-range/lib/css/index.css';\r\n\r\nimport _data from '../../../mock_data/data';\r\n\r\nimport { getCountByCategory } from '../../../services';\r\nimport { toggleCategoryFilter, resetFilter, toggleSizeFilter, toggleBrandFilter, toggleColorFilter, filterPrice } from '../../../actions';\r\nimport { findIndex } from '../../../utils';\r\n\r\nfunction ShopFilter( props ) {\r\n    const [ value, setValue ] = useState( { max: 1000, min: 0 } );\r\n\r\n    const sizes = [ \"XS\", \"S\", \"M\", \"L\", \"XL\", \"XXL\" ];\r\n    const brands = [ \"Next\", \"River Island\", \"Geox\", \"New Balance\", \"UGG\", \"F&F\", \"Nike\" ];\r\n    const colors = [ \"#b87145\", \"#f0c04a\", \"#333333\", \"#cc3333\", \"#3399cc\", \"#669933\", \"#f2719c\", \"#ebebeb\" ];\r\n\r\n    let categoryCountsArr = [];\r\n    _data.categories.wears.map( ( item, index ) => {\r\n        categoryCountsArr.push( getCountByCategory( props.products.slice( 0, props.numbers ), item.name ) );\r\n        return null;\r\n    } );\r\n\r\n    function changeIcon( e ) {\r\n        if ( e.target.classList.contains( 'collapsed' ) )\r\n            e.target.classList.remove( 'collapsed' );\r\n        else\r\n            e.target.classList.add( 'collapsed' );\r\n    }\r\n\r\n    function clearAll( e ) {\r\n        let items = document.querySelector( '.sidebar-shop' ).querySelectorAll( 'input' );\r\n        for ( let i = 0; i < items.length; i++ ) {\r\n            items[ i ].checked = false;\r\n        }\r\n        items = document.querySelector( '.sidebar-shop' ).querySelectorAll( '.selected' );\r\n        for ( let i = 0; i < items.length; i++ ) {\r\n            items[ i ].classList.remove( 'selected' );\r\n        }\r\n\r\n        setValue( { max: 1000, min: 0 } );\r\n        props.resetFilter();\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <aside className=\"sidebar-shop sidebar-filter\">\r\n            <div className=\"sidebar-filter-wrapper\">\r\n                <div className=\"widget widget-clean\">\r\n                    <label>Filters:</label>\r\n                    <a href=\"#a\" className=\"sidebar-filter-clear\" onClick={ clearAll }>Clean All</a>\r\n                </div>\r\n\r\n                <SlideToggle collapsed={ false }>\r\n                    { ( { onToggle, setCollapsibleElement } ) => (\r\n                        <div className=\"widget widget-collapsible\">\r\n                            <h3 className=\"widget-title\">\r\n                                <a href=\"#category\" onClick={ ( e ) => { onToggle( e ); changeIcon( e ); e.preventDefault() } } role=\"button\" aria-expanded=\"true\" aria-controls=\"widget-1\">Category</a>\r\n                            </h3>\r\n\r\n                            <div ref={ setCollapsibleElement }>\r\n                                <div className=\"widget-body\">\r\n                                    <div className=\"filter-items filter-items-count\">\r\n                                        {\r\n                                            _data.categories.wears.map( ( item, index ) =>\r\n                                                <div className=\"filter-item\" key={ \"cat\" + index }>\r\n                                                    <div className=\"custom-control custom-checkbox\">\r\n\r\n                                                        <input type=\"checkbox\"\r\n                                                            className=\"custom-control-input\"\r\n                                                            id={ `cat-${index + 1}` }\r\n                                                            onClick={ ( e ) => props.toggleCategoryFilter( item.name ) }\r\n                                                            defaultChecked={ -1 < findIndex( props.filters[ \"category\" ], filter => filter === item.name ) ? true : false }\r\n                                                        />\r\n\r\n                                                        <label className=\"custom-control-label\" htmlFor={ `cat-${index + 1}` }>{ item.name }</label>\r\n\r\n                                                    </div>\r\n                                                    <span className=\"item-count\">{ categoryCountsArr[ index ] }</span>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) }\r\n                </SlideToggle>\r\n\r\n                <SlideToggle collapsed={ false }>\r\n                    { ( { onToggle, setCollapsibleElement } ) => (\r\n                        <div className=\"widget widget-collapsible\">\r\n                            <h3 className=\"widget-title\">\r\n                                <a href=\"#Size\" onClick={ ( e ) => { onToggle( e ); changeIcon( e ); e.preventDefault() } } role=\"button\" aria-expanded=\"true\" aria-controls=\"widget-1\">Size</a>\r\n                            </h3>\r\n                            <div ref={ setCollapsibleElement }>\r\n                                <div className=\"widget-body\">\r\n                                    <div className=\"filter-items\">\r\n                                        { sizes.map( ( item, index ) => (\r\n\r\n                                            <div className=\"filter-item\" key={ index }>\r\n                                                <div className=\"custom-control custom-checkbox\">\r\n                                                    <input type=\"checkbox\"\r\n                                                        className=\"custom-control-input\"\r\n                                                        id={ `size-${index + 1}` }\r\n                                                        onClick={ ( e ) => props.toggleSizeFilter( item ) }\r\n                                                        defaultChecked={ -1 < findIndex( props.filters[ \"size\" ], filter => filter === item ) ? true : false }\r\n                                                    />\r\n                                                    <label className=\"custom-control-label\" htmlFor={ `size-${index + 1}` }>{ item }</label>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        ) ) }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) }\r\n                </SlideToggle>\r\n\r\n                <SlideToggle collapsed={ false }>\r\n                    { ( { onToggle, setCollapsibleElement } ) => (\r\n                        <div className=\"widget widget-collapsible\">\r\n                            <h3 className=\"widget-title\">\r\n                                <a href=\"#colour\" onClick={ ( e ) => { onToggle( e ); changeIcon( e ); e.preventDefault() } } role=\"button\" aria-expanded=\"true\" aria-controls=\"widget-1\">Colour</a>\r\n                            </h3>\r\n                            <div ref={ setCollapsibleElement }>\r\n                                <div className=\"widget-body\">\r\n                                    <div className=\"filter-colors\">\r\n                                        {\r\n                                            colors.map( ( item, index ) => (\r\n\r\n                                                <Link to=\"#\" key={ index }\r\n                                                    className={ -1 < findIndex( props.filters[ \"color\" ], filter => filter === item ) ? \"selected\" : \"\" }\r\n                                                    style={ { background: item } }\r\n                                                    onClick={ ( e ) => { props.toggleColorFilter( item ); e.preventDefault(); } }>\r\n                                                    <span className=\"sr-only\">Color Name</span>\r\n                                                </Link>\r\n\r\n                                            ) )\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) }\r\n                </SlideToggle>\r\n\r\n                <SlideToggle collapsed={ false }>\r\n                    { ( { onToggle, setCollapsibleElement } ) => (\r\n                        <div className=\"widget widget-collapsible\">\r\n                            <h3 className=\"widget-title\"><a href=\"#brand\" onClick={ ( e ) => { onToggle( e ); changeIcon( e ); e.preventDefault() } } role=\"button\" aria-expanded=\"true\" aria-controls=\"widget-1\">Brand</a></h3>\r\n                            <div ref={ setCollapsibleElement }>\r\n                                <div className=\"widget-body\">\r\n                                    <div className=\"filter-items\">\r\n                                        { brands.map( ( item, index ) => (\r\n                                            <div className=\"filter-item\" key={ index }>\r\n                                                <div className=\"custom-control custom-checkbox\">\r\n                                                    <input type=\"checkbox\"\r\n                                                        className=\"custom-control-input\"\r\n                                                        id={ `brand-${index + 1}` }\r\n                                                        onClick={ ( e ) => props.toggleBrandFilter( item ) }\r\n                                                        defaultChecked={ -1 < findIndex( props.filters[ \"brand\" ], filter => filter === item ) ? true : false }\r\n                                                    />\r\n                                                    <label className=\"custom-control-label\" htmlFor={ `brand-${index + 1}` }>{ item }</label>\r\n                                                </div>\r\n                                            </div>\r\n                                        ) ) }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) }\r\n                </SlideToggle>\r\n\r\n                <SlideToggle collapsed={ false }>\r\n                    { ( { onToggle, setCollapsibleElement } ) => (\r\n                        <div className=\"widget widget-collapsible\">\r\n                            <h3 className=\"widget-title\">\r\n                                <a href=\"#price\" onClick={ ( e ) => { onToggle( e ); changeIcon( e ); e.preventDefault() } } role=\"button\" aria-expanded=\"true\" aria-controls=\"widget-1\">Price</a>\r\n                            </h3>\r\n\r\n                            <div ref={ setCollapsibleElement }>\r\n                                <div className=\"widget-body\">\r\n                                    <div className=\"filter-price\">\r\n                                        <div className=\"filter-price-text\">\r\n                                            Price Range:&nbsp;\r\n                                            <span className=\"filter-price-range\">${ value.min } - ${ value.max }</span>\r\n                                        </div>\r\n\r\n                                        <div className=\"price-slider\">\r\n                                            <InputRange\r\n                                                formatLabel={ value => `$${value}` }\r\n                                                maxValue={ 1000 }\r\n                                                minValue={ 0 }\r\n                                                step={ 100 }\r\n                                                value={ value }\r\n                                                onChange={ value => { setValue( value ); props.filterPrice( value ); } } />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) }\r\n                </SlideToggle>\r\n            </div>\r\n        </aside>\r\n    );\r\n}\r\n\r\nexport const mapStateToProps = ( state, props ) => {\r\n    return {\r\n        filters: state.filters,\r\n        products: state.data.products ? state.data.products : []\r\n    }\r\n}\r\n\r\nexport default connect( mapStateToProps, { toggleCategoryFilter, toggleSizeFilter, toggleBrandFilter, toggleColorFilter, filterPrice, resetFilter } )( ShopFilter );"]},"metadata":{},"sourceType":"module"}