{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Eddi\\\\Documents\\\\Proyectos\\\\DS2\\\\Eros-Shop\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eddi\\\\Documents\\\\Proyectos\\\\DS2\\\\Eros-Shop\\\\Nueva carpeta\\\\src\\\\components\\\\features\\\\sidebar\\\\shop-sidebar.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport InputRange from 'react-input-range';\nimport { SlideToggle } from 'react-slide-toggle';\nimport { Link } from 'react-router-dom';\nimport 'react-input-range/lib/css/index.css';\nimport _data from '../../../mock_data/data';\nimport { getCountByCategory } from '../../../services';\nimport { toggleCategoryFilter, resetFilter, toggleSizeFilter, toggleBrandFilter, toggleColorFilter, filterPrice } from '../../../actions';\nimport { findIndex } from '../../../utils';\n\nfunction ShopSidebar(props) {\n  var _this = this;\n\n  var _useState = useState({\n    max: 1000,\n    min: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      toggle = _useState4[0],\n      setToggle = _useState4[1];\n\n  var sizes = [\"XS\", \"S\", \"M\", \"L\", \"XL\", \"XXL\"];\n  var brands = [\"Next\", \"River Island\", \"Geox\", \"New Balance\", \"UGG\", \"F&F\", \"Nike\"];\n  var colors = [\"#b87145\", \"#f0c04a\", \"#333333\", \"#cc3333\", \"#3399cc\", \"#669933\", \"#f2719c\", \"#ebebeb\"];\n  var categoryCountArr = [];\n  var filters = props.filters,\n      products = props.products;\n\n  _data.categories.wears.map(function (item, index) {\n    return categoryCountArr.push(getCountByCategory(products.slice(0, 47), item.name));\n  });\n\n  useEffect(function () {\n    window.addEventListener(\"resize\", resizeHandle);\n    resizeHandle();\n    return function () {\n      window.removeEventListener(\"resize\", resizeHandle);\n    };\n  }, []);\n\n  function resizeHandle() {\n    if (document.querySelector(\"body\").offsetWidth < 992) setToggle(true);else setToggle(false);\n  }\n\n  function changeIcon(e) {\n    e.target.classList.toggle('collapsed');\n  }\n\n  function hideSideBar() {\n    if (document.querySelector('body').classList.contains('sidebar-filter-active')) document.querySelector('body').classList.remove('sidebar-filter-active');\n  }\n\n  function toggleSideBar() {\n    if (document.querySelector('body').classList.contains('sidebar-filter-active')) document.querySelector('body').classList.remove('sidebar-filter-active');else document.querySelector('body').classList.add('sidebar-filter-active');\n  }\n\n  function clearAll(e) {\n    var items = document.querySelector('.sidebar-shop').querySelectorAll('input');\n\n    for (var i = 0; i < items.length; i++) {\n      items[i].checked = false;\n    }\n\n    items = document.querySelector('.sidebar-shop').querySelectorAll('.selected');\n\n    for (var _i = 0; _i < items.length; _i++) {\n      items[_i].classList.remove('selected');\n    }\n\n    setValue({\n      max: 1000,\n      min: 0\n    });\n    props.resetFilter();\n    e.preventDefault();\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"aside\", {\n    className: \"\".concat(toggle ? 'sidebar-filter' : 'sidebar', \" sidebar-shop\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: toggle ? 'sidebar-filter-wrapper' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"widget widget-clean\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, \"Filters:\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#a\",\n    className: \"sidebar-filter-clear\",\n    onClick: function onClick(e) {\n      return clearAll(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, \"ClearAll\")), /*#__PURE__*/React.createElement(SlideToggle, {\n    collapsed: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, function (_ref) {\n    var onToggle = _ref.onToggle,\n        setCollapsibleElement = _ref.setCollapsibleElement;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"widget widget-collapsible\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"widget-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#category\",\n      onClick: function onClick(e) {\n        onToggle(e);\n        changeIcon(e);\n        e.preventDefault();\n      },\n      role: \"button\",\n      \"aria-expanded\": \"true\",\n      \"aria-controls\": \"widget-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 37\n      }\n    }, \"Category\")), /*#__PURE__*/React.createElement(\"div\", {\n      ref: setCollapsibleElement,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"widget-body\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-items filter-items-count\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 41\n      }\n    }, _data.categories.wears.map(function (item, index) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filter-item\",\n        key: \"cat_\".concat(index),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-control custom-checkbox\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        className: \"custom-control-input\",\n        id: \"cat-\".concat(index + 1),\n        onClick: function onClick(e) {\n          return props.toggleCategoryFilter(item.name);\n        },\n        defaultChecked: -1 < findIndex(filters['category'], function (filter) {\n          return filter === item.name;\n        }) ? true : false,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 61\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"custom-control-label\",\n        htmlFor: \"cat-\".concat(index + 1),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 61\n        }\n      }, item.name)), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"item-count\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 57\n        }\n      }, categoryCountArr[index]));\n    })))));\n  }), /*#__PURE__*/React.createElement(SlideToggle, {\n    collapsed: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, function (_ref2) {\n    var onToggle = _ref2.onToggle,\n        setCollapsibleElement = _ref2.setCollapsibleElement;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"widget widget-collapsible\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"widget-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#Size\",\n      onClick: function onClick(e) {\n        onToggle(e);\n        changeIcon(e);\n        e.preventDefault();\n      },\n      role: \"button\",\n      \"aria-expanded\": \"true\",\n      \"aria-controls\": \"widget-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 62\n      }\n    }, \"Size\")), /*#__PURE__*/React.createElement(\"div\", {\n      ref: setCollapsibleElement,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"widget-body\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-items\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 41\n      }\n    }, sizes.map(function (item, index) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filter-item\",\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-control custom-checkbox\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        className: \"custom-control-input\",\n        id: \"size-\".concat(index + 1),\n        onClick: function onClick(e) {\n          return props.toggleSizeFilter(item);\n        },\n        defaultChecked: -1 < findIndex(filters['size'], function (filter) {\n          return filter === item;\n        }) ? true : false,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 57\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"custom-control-label\",\n        htmlFor: \"size-\".concat(index + 1),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 57\n        }\n      }, item)));\n    })))));\n  }), /*#__PURE__*/React.createElement(SlideToggle, {\n    collapsed: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, function (_ref3) {\n    var onToggle = _ref3.onToggle,\n        setCollapsibleElement = _ref3.setCollapsibleElement;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"widget widget-collapsible\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"widget-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#colour\",\n      onClick: function onClick(e) {\n        onToggle(e);\n        changeIcon(e);\n        e.preventDefault();\n      },\n      role: \"button\",\n      \"aria-expanded\": \"true\",\n      \"aria-controls\": \"widget-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 62\n      }\n    }, \"Colour\")), /*#__PURE__*/React.createElement(\"div\", {\n      ref: setCollapsibleElement,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"widget-body\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-colors\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 41\n      }\n    }, colors.map(function (item, index) {\n      return /*#__PURE__*/React.createElement(Link, {\n        to: \"#\",\n        className: -1 < findIndex(filters['color'], function (filter) {\n          return filter === item;\n        }) ? \"selected\" : \"\",\n        style: {\n          background: item\n        },\n        onClick: function onClick(e) {\n          props.toggleColorFilter(item);\n          e.preventDefault();\n        },\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"sr-only\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 57\n        }\n      }, \"Color Name\"));\n    })))));\n  }), /*#__PURE__*/React.createElement(SlideToggle, {\n    collapsed: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, function (_ref4) {\n    var onToggle = _ref4.onToggle,\n        setCollapsibleElement = _ref4.setCollapsibleElement;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"widget widget-collapsible\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"widget-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#brand\",\n      onClick: function onClick(e) {\n        onToggle(e);\n        changeIcon(e);\n        e.preventDefault();\n      },\n      role: \"button\",\n      \"aria-expanded\": \"true\",\n      \"aria-controls\": \"widget-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 62\n      }\n    }, \"Brand\")), /*#__PURE__*/React.createElement(\"div\", {\n      ref: setCollapsibleElement,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"widget-body\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-items\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 41\n      }\n    }, brands.map(function (item, index) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filter-item\",\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-control custom-checkbox\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        className: \"custom-control-input\",\n        id: \"brand-\".concat(index + 1),\n        onClick: function onClick(e) {\n          return props.toggleBrandFilter(item);\n        },\n        defaultChecked: -1 < findIndex(filters['brand'], function (filter) {\n          return filter === item;\n        }) ? true : false,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 57\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"custom-control-label\",\n        htmlFor: \"brand-\".concat(index + 1),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 57\n        }\n      }, item)));\n    })))));\n  }), /*#__PURE__*/React.createElement(SlideToggle, {\n    collapsed: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, function (_ref5) {\n    var onToggle = _ref5.onToggle,\n        setCollapsibleElement = _ref5.setCollapsibleElement;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"widget widget-collapsible\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"widget-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#price\",\n      onClick: function onClick(e) {\n        onToggle(e);\n        changeIcon(e);\n        e.preventDefault();\n      },\n      role: \"button\",\n      \"aria-expanded\": \"true\",\n      \"aria-controls\": \"widget-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 37\n      }\n    }, \"Price\")), /*#__PURE__*/React.createElement(\"div\", {\n      ref: setCollapsibleElement,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"widget-body\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-price\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-price-text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 45\n      }\n    }, \"Price Range:\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"filter-price-range\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 49\n      }\n    }, \"$\", value.min, \" - $\", value.max)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"price-slider\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(InputRange, {\n      formatLabel: function formatLabel(value) {\n        return \"$\".concat(value);\n      },\n      maxValue: 1000,\n      minValue: 0,\n      step: 50,\n      value: value,\n      onChange: function onChange(value) {\n        setValue(value);\n        props.filterPrice(value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 49\n      }\n    }))))));\n  }))), toggle ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"sidebar-fixed-toggler\",\n    onClick: toggleSideBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon-cog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 21\n    }\n  })) : '', /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar-filter-overlay\",\n    onClick: hideSideBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport var mapStateToProps = function mapStateToProps(state) {\n  return {\n    filters: state.filters,\n    products: state.data.products ? state.data.products : []\n  };\n};\nexport default connect(mapStateToProps, {\n  toggleCategoryFilter: toggleCategoryFilter,\n  toggleSizeFilter: toggleSizeFilter,\n  toggleBrandFilter: toggleBrandFilter,\n  toggleColorFilter: toggleColorFilter,\n  filterPrice: filterPrice,\n  resetFilter: resetFilter\n})(ShopSidebar);","map":{"version":3,"sources":["C:/Users/Eddi/Documents/Proyectos/DS2/Eros-Shop/Nueva carpeta/src/components/features/sidebar/shop-sidebar.jsx"],"names":["React","useState","useEffect","connect","InputRange","SlideToggle","Link","_data","getCountByCategory","toggleCategoryFilter","resetFilter","toggleSizeFilter","toggleBrandFilter","toggleColorFilter","filterPrice","findIndex","ShopSidebar","props","max","min","value","setValue","toggle","setToggle","sizes","brands","colors","categoryCountArr","filters","products","categories","wears","map","item","index","push","slice","name","window","addEventListener","resizeHandle","removeEventListener","document","querySelector","offsetWidth","changeIcon","e","target","classList","hideSideBar","contains","remove","toggleSideBar","add","clearAll","items","querySelectorAll","i","length","checked","preventDefault","onToggle","setCollapsibleElement","filter","background","mapStateToProps","state","data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport InputRange from 'react-input-range';\r\nimport { SlideToggle } from 'react-slide-toggle';\r\nimport { Link } from 'react-router-dom';\r\nimport 'react-input-range/lib/css/index.css';\r\n\r\nimport _data from '../../../mock_data/data';\r\nimport { getCountByCategory } from '../../../services';\r\nimport { toggleCategoryFilter, resetFilter, toggleSizeFilter, toggleBrandFilter, toggleColorFilter, filterPrice } from '../../../actions';\r\nimport { findIndex } from '../../../utils';\r\n\r\nfunction ShopSidebar( props ) {\r\n    const [ value, setValue ] = useState( { max: 1000, min: 0 } )\r\n    const [ toggle, setToggle ] = useState( false );\r\n    const sizes = [ \"XS\", \"S\", \"M\", \"L\", \"XL\", \"XXL\" ];\r\n    const brands = [ \"Next\", \"River Island\", \"Geox\", \"New Balance\", \"UGG\", \"F&F\", \"Nike\" ];\r\n    const colors = [ \"#b87145\", \"#f0c04a\", \"#333333\", \"#cc3333\", \"#3399cc\", \"#669933\", \"#f2719c\", \"#ebebeb\" ];\r\n    let categoryCountArr = [];\r\n    const { filters, products } = props;\r\n\r\n    _data.categories.wears.map( ( item, index ) => {\r\n        return categoryCountArr.push( getCountByCategory( products.slice( 0, 47 ), item.name ) )\r\n    } );\r\n\r\n    useEffect( () => {\r\n        window.addEventListener( \"resize\", resizeHandle );\r\n        resizeHandle();\r\n\r\n        return () => {\r\n            window.removeEventListener( \"resize\", resizeHandle );\r\n        }\r\n    }, [] )\r\n\r\n    function resizeHandle() {\r\n        if ( document.querySelector( \"body\" ).offsetWidth < 992 )\r\n            setToggle( true );\r\n        else\r\n            setToggle( false );\r\n    }\r\n\r\n    function changeIcon( e ) {\r\n        e.target.classList.toggle( 'collapsed' );\r\n    }\r\n\r\n    function hideSideBar() {\r\n        if ( document.querySelector( 'body' ).classList.contains( 'sidebar-filter-active' ) )\r\n            document.querySelector( 'body' ).classList.remove( 'sidebar-filter-active' );\r\n    }\r\n\r\n    function toggleSideBar() {\r\n        if ( document.querySelector( 'body' ).classList.contains( 'sidebar-filter-active' ) )\r\n            document.querySelector( 'body' ).classList.remove( 'sidebar-filter-active' );\r\n        else\r\n            document.querySelector( 'body' ).classList.add( 'sidebar-filter-active' );\r\n    }\r\n\r\n    function clearAll( e ) {\r\n        let items = document.querySelector( '.sidebar-shop' ).querySelectorAll( 'input' );\r\n        for ( let i = 0; i < items.length; i++ ) {\r\n            items[ i ].checked = false;\r\n        }\r\n\r\n        items = document.querySelector( '.sidebar-shop' ).querySelectorAll( '.selected' );\r\n\r\n        for ( let i = 0; i < items.length; i++ ) {\r\n            items[ i ].classList.remove( 'selected' );\r\n        }\r\n\r\n        setValue( { max: 1000, min: 0 } );\r\n        props.resetFilter();\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <aside className={ `${toggle ? 'sidebar-filter' : 'sidebar'} sidebar-shop` }>\r\n                <div className={ toggle ? 'sidebar-filter-wrapper' : '' }>\r\n                    <div className=\"widget widget-clean\">\r\n                        <label>Filters:</label>\r\n                        <a href=\"#a\" className=\"sidebar-filter-clear\" onClick={ ( e ) => clearAll( e ) }>ClearAll</a>\r\n                    </div>\r\n\r\n                    <SlideToggle collapsed={ false }>\r\n                        { ( { onToggle, setCollapsibleElement } ) => (\r\n                            <div className=\"widget widget-collapsible\">\r\n                                <h3 className=\"widget-title\">\r\n                                    <a href=\"#category\" onClick={ ( e ) => { onToggle( e ); changeIcon( e ); e.preventDefault() } } role=\"button\" aria-expanded=\"true\" aria-controls=\"widget-1\">Category</a>\r\n                                </h3>\r\n\r\n                                <div ref={ setCollapsibleElement }>\r\n                                    <div className=\"widget-body\">\r\n                                        <div className=\"filter-items filter-items-count\">\r\n                                            {\r\n                                                _data.categories.wears.map( ( item, index ) =>\r\n                                                    <div className=\"filter-item\" key={ `cat_${index}` }>\r\n                                                        <div className=\"custom-control custom-checkbox\">\r\n\r\n                                                            <input type=\"checkbox\"\r\n                                                                className=\"custom-control-input\"\r\n                                                                id={ `cat-${index + 1}` }\r\n                                                                onClick={ ( e ) => props.toggleCategoryFilter( item.name ) }\r\n                                                                defaultChecked={ -1 < findIndex( filters[ 'category' ], filter => filter === item.name ) ? true : false }\r\n                                                            />\r\n\r\n                                                            <label className=\"custom-control-label\" htmlFor={ `cat-${index + 1}` }>{ item.name }</label>\r\n\r\n                                                        </div>\r\n                                                        <span className=\"item-count\">{ categoryCountArr[ index ] }</span>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ) }\r\n                    </SlideToggle>\r\n\r\n                    <SlideToggle collapsed={ false }>\r\n                        { ( { onToggle, setCollapsibleElement } ) => (\r\n                            <div className=\"widget widget-collapsible\">\r\n                                <h3 className=\"widget-title\"><a href=\"#Size\" onClick={ ( e ) => { onToggle( e ); changeIcon( e ); e.preventDefault() } } role=\"button\" aria-expanded=\"true\" aria-controls=\"widget-1\">Size</a></h3>\r\n                                <div ref={ setCollapsibleElement }>\r\n                                    <div className=\"widget-body\">\r\n                                        <div className=\"filter-items\">\r\n                                            { sizes.map( ( item, index ) => (\r\n\r\n                                                <div className=\"filter-item\" key={ index }>\r\n                                                    <div className=\"custom-control custom-checkbox\">\r\n                                                        <input type=\"checkbox\"\r\n                                                            className=\"custom-control-input\"\r\n                                                            id={ `size-${index + 1}` }\r\n                                                            onClick={ ( e ) => props.toggleSizeFilter( item ) }\r\n                                                            defaultChecked={ -1 < findIndex( filters[ 'size' ], filter => filter === item ) ? true : false }\r\n                                                        />\r\n                                                        <label className=\"custom-control-label\" htmlFor={ `size-${index + 1}` }>{ item }</label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) ) }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ) }\r\n                    </SlideToggle>\r\n\r\n                    <SlideToggle collapsed={ false }>\r\n                        { ( { onToggle, setCollapsibleElement } ) => (\r\n                            <div className=\"widget widget-collapsible\">\r\n                                <h3 className=\"widget-title\"><a href=\"#colour\" onClick={ ( e ) => { onToggle( e ); changeIcon( e ); e.preventDefault() } } role=\"button\" aria-expanded=\"true\" aria-controls=\"widget-1\">Colour</a></h3>\r\n                                <div ref={ setCollapsibleElement }>\r\n                                    <div className=\"widget-body\">\r\n                                        <div className=\"filter-colors\">\r\n                                            {\r\n                                                colors.map( ( item, index ) => (\r\n                                                    <Link to=\"#\" className={ -1 < findIndex( filters[ 'color' ], filter => filter === item ) ? \"selected\" : \"\" } style={ { background: item } } onClick={ ( e ) => { props.toggleColorFilter( item ); e.preventDefault(); } } key={ index }>\r\n                                                        <span className=\"sr-only\">Color Name</span>\r\n                                                    </Link>\r\n                                                ) )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ) }\r\n                    </SlideToggle>\r\n\r\n                    <SlideToggle collapsed={ false }>\r\n                        { ( { onToggle, setCollapsibleElement } ) => (\r\n                            <div className=\"widget widget-collapsible\">\r\n                                <h3 className=\"widget-title\"><a href=\"#brand\" onClick={ ( e ) => { onToggle( e ); changeIcon( e ); e.preventDefault() } } role=\"button\" aria-expanded=\"true\" aria-controls=\"widget-1\">Brand</a></h3>\r\n                                <div ref={ setCollapsibleElement }>\r\n                                    <div className=\"widget-body\">\r\n                                        <div className=\"filter-items\">\r\n                                            { brands.map( ( item, index ) => (\r\n\r\n                                                <div className=\"filter-item\" key={ index }>\r\n                                                    <div className=\"custom-control custom-checkbox\">\r\n\r\n                                                        <input type=\"checkbox\"\r\n                                                            className=\"custom-control-input\"\r\n                                                            id={ `brand-${index + 1}` }\r\n                                                            onClick={ ( e ) => props.toggleBrandFilter( item ) }\r\n                                                            defaultChecked={ -1 < findIndex( filters[ 'brand' ],\r\n                                                                filter => filter === item ) ? true : false }\r\n                                                        />\r\n                                                        <label className=\"custom-control-label\" htmlFor={ `brand-${index + 1}` }>{ item }</label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) ) }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ) }\r\n                    </SlideToggle>\r\n\r\n                    <SlideToggle collapsed={ false }>\r\n                        { ( { onToggle, setCollapsibleElement } ) => (\r\n                            <div className=\"widget widget-collapsible\">\r\n                                <h3 className=\"widget-title\">\r\n                                    <a href=\"#price\" onClick={ ( e ) => { onToggle( e ); changeIcon( e ); e.preventDefault() } } role=\"button\" aria-expanded=\"true\" aria-controls=\"widget-1\">Price</a>\r\n                                </h3>\r\n\r\n                                <div ref={ setCollapsibleElement }>\r\n                                    <div className=\"widget-body\">\r\n                                        <div className=\"filter-price\">\r\n                                            <div className=\"filter-price-text\">\r\n                                                Price Range:&nbsp;\r\n                                                <span className=\"filter-price-range\">${ value.min } - ${ value.max }</span>\r\n                                            </div>\r\n\r\n                                            <div className=\"price-slider\">\r\n                                                <InputRange\r\n                                                    formatLabel={ value => `$${value}` }\r\n                                                    maxValue={ 1000 }\r\n                                                    minValue={ 0 }\r\n                                                    step={ 50 }\r\n                                                    value={ value }\r\n                                                    onChange={ value => { setValue( value ); props.filterPrice( value ); } }\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ) }\r\n                    </SlideToggle>\r\n                </div>\r\n            </aside>\r\n            { toggle ?\r\n                <button className=\"sidebar-fixed-toggler\" onClick={ toggleSideBar }>\r\n                    <i className=\"icon-cog\"></i>\r\n                </button>\r\n                : ''\r\n            }\r\n            <div className=\"sidebar-filter-overlay\" onClick={ hideSideBar }></div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport const mapStateToProps = ( state ) => {\r\n    return {\r\n        filters: state.filters,\r\n        products: state.data.products ? state.data.products : []\r\n    }\r\n}\r\n\r\nexport default connect( mapStateToProps, { toggleCategoryFilter, toggleSizeFilter, toggleBrandFilter, toggleColorFilter, filterPrice, resetFilter } )( ShopSidebar );"]},"metadata":{},"sourceType":"module"}