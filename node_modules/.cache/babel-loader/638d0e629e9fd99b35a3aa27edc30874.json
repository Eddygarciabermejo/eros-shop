{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Eddi\\\\Documents\\\\Proyectos\\\\DS2\\\\Eros-Shop\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\Eddi\\\\Documents\\\\Proyectos\\\\DS2\\\\Eros-Shop\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { ADD_TO_CART, REMOVE_FROM_CART, CHANGE_QTY, CHANGE_SHIPPING } from \"../constants/action-types\";\nimport { findIndex } from \"../utils\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from 'redux-persist/lib/storage';\n\nfunction cartReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    cart: [],\n    shipping: \"free\"\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TO_CART:\n      var productId = action.product.id;\n\n      if (findIndex(state.cart, function (product) {\n        return product.id === productId;\n      }) !== -1) {\n        var _cart = state.cart.reduce(function (cartAcc, product) {\n          if (product.id === productId) {\n            cartAcc.push(_objectSpread({}, product, {\n              qty: parseInt(product.qty) + parseInt(action.qty),\n              sum: (product.discount ? product.salePrice : product.price) * (parseInt(product.qty) + parseInt(action.qty))\n            })); // Increment qty\n          } else {\n            cartAcc.push(product);\n          }\n\n          return cartAcc;\n        }, []);\n\n        return _objectSpread({}, state, {\n          cart: _cart\n        });\n      }\n\n      return _objectSpread({}, state, {\n        cart: [].concat(_toConsumableArray(state.cart), [_objectSpread({}, action.product, {\n          qty: action.qty,\n          sum: (action.product.discount ? action.product.salePrice : action.product.price) * action.qty\n        })])\n      });\n\n    case REMOVE_FROM_CART:\n      return _objectSpread({}, state, {\n        cart: state.cart.filter(function (item) {\n          return item.id !== action.productId;\n        })\n      });\n\n    case CHANGE_QTY:\n      var cart = state.cart.reduce(function (cartAcc, product) {\n        if (product.id === action.productId) {\n          cartAcc.push(_objectSpread({}, product, {\n            qty: action.qty,\n            sum: (product.discount ? product.salePrice : product.price) * action.qty\n          })); // Increment qty\n        } else {\n          cartAcc.push(product);\n        }\n\n        return cartAcc;\n      }, []);\n      return _objectSpread({}, state, {\n        cart: cart\n      });\n\n    case CHANGE_SHIPPING:\n      return _objectSpread({}, state, {\n        shipping: action.shipping\n      });\n\n    default:\n      return state;\n  }\n}\n\nvar persistConfig = {\n  keyPrefix: \"molla-\",\n  key: \"cartlist\",\n  storage: storage\n};\nexport default persistReducer(persistConfig, cartReducer);","map":{"version":3,"sources":["C:/Users/Eddi/Documents/Proyectos/DS2/Eros-Shop/Nueva carpeta/src/reducers/cart.js"],"names":["ADD_TO_CART","REMOVE_FROM_CART","CHANGE_QTY","CHANGE_SHIPPING","findIndex","persistReducer","storage","cartReducer","state","cart","shipping","action","type","productId","product","id","reduce","cartAcc","push","qty","parseInt","sum","discount","salePrice","price","filter","item","persistConfig","keyPrefix","key"],"mappings":"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","sourcesContent":["import { ADD_TO_CART, REMOVE_FROM_CART, CHANGE_QTY, CHANGE_SHIPPING } from \"../constants/action-types\";\r\nimport { findIndex } from \"../utils\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nfunction cartReducer( state = {\r\n    cart: [],\r\n    shipping: \"free\"\r\n}, action ) {\r\n    switch ( action.type ) {\r\n        case ADD_TO_CART:\r\n            const productId = action.product.id;\r\n\r\n            if ( findIndex( state.cart, product => product.id === productId ) !== -1 ) {\r\n                const cart = state.cart.reduce( ( cartAcc, product ) => {\r\n                    if ( product.id === productId ) {\r\n                        cartAcc.push( { ...product, qty: parseInt( product.qty ) + parseInt( action.qty ), sum: ( product.discount ? product.salePrice : product.price ) * ( parseInt( product.qty ) + parseInt( action.qty ) ) } ) // Increment qty\r\n                    } else {\r\n                        cartAcc.push( product )\r\n                    }\r\n                    return cartAcc\r\n                }, [] )\r\n\r\n                return { ...state, cart }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                cart: [\r\n                    ...state.cart,\r\n                    {\r\n                        ...action.product,\r\n                        qty: action.qty,\r\n                        sum: ( action.product.discount ? action.product.salePrice : action.product.price ) * action.qty\r\n                    }\r\n                ]\r\n            }\r\n\r\n        case REMOVE_FROM_CART:\r\n            return {\r\n                ...state,\r\n                cart: state.cart.filter( item => item.id !== action.productId )\r\n            };\r\n\r\n        case CHANGE_QTY:\r\n            const cart = state.cart.reduce( ( cartAcc, product ) => {\r\n                if ( product.id === action.productId ) {\r\n                    cartAcc.push( { ...product, qty: action.qty, sum: ( product.discount ? product.salePrice : product.price ) * action.qty } ) // Increment qty\r\n                } else {\r\n                    cartAcc.push( product )\r\n                }\r\n                return cartAcc\r\n            }, [] )\r\n\r\n            return { ...state, cart };\r\n\r\n        case CHANGE_SHIPPING:\r\n            return { ...state, shipping: action.shipping };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst persistConfig = {\r\n    keyPrefix: \"molla-\",\r\n    key: \"cartlist\",\r\n    storage\r\n}\r\n\r\nexport default persistReducer( persistConfig, cartReducer );"]},"metadata":{},"sourceType":"module"}