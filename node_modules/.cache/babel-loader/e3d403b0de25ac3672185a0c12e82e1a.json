{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eddi\\\\Documents\\\\Proyectos\\\\DS2\\\\Eros-Shop\\\\Nueva carpeta\\\\src\\\\components\\\\features\\\\post\\\\post-two.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport OwlCarousel from '../owl-carousel';\n\nfunction PostThree(props) {\n  var _this = this;\n\n  var post = props.post,\n      _props$imageSize = props.imageSize,\n      imageSize = _props$imageSize === void 0 ? 4 : _props$imageSize,\n      _props$isIsotope = props.isIsotope,\n      isIsotope = _props$isIsotope === void 0 ? false : _props$isIsotope;\n\n  if (post) {\n    var date = new Date(post.date);\n    var options = {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"2-digit\",\n      timeZone: \"UTC\"\n    };\n    return /*#__PURE__*/React.createElement(\"article\", {\n      className: \"entry entry-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-\".concat(imageSize),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }\n    }, \"video\" === post.type ? /*#__PURE__*/React.createElement(\"figure\", {\n      className: \"entry-media entry-video\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"\".concat(process.env.PUBLIC_URL, \"/blog/single/\").concat(post.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 33\n      }\n    }, isIsotope ? /*#__PURE__*/React.createElement(\"img\", {\n      src: \"\".concat(process.env.PUBLIC_URL + '/' + post.image[0]),\n      alt: \"post_image\",\n      width: \"300\",\n      height: \"300\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 41\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lazy-overlay bg-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(LazyLoadImage, {\n      alt: \"post_image\",\n      src: \"\".concat(process.env.PUBLIC_URL + '/' + post.image[0]),\n      threshold: 500,\n      effect: \"blur\",\n      width: 300,\n      height: 300,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 45\n      }\n    })))) : Array.isArray(post.image) && \"gallery\" === post.type ? /*#__PURE__*/React.createElement(\"figure\", {\n      className: \"entry-media\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(OwlCarousel, {\n      adClass: \"owl-simple owl-light owl-nav-inside cols-1\",\n      carouselId: \"post_two\" + post.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 37\n      }\n    }, post.image.map(function (item, index) {\n      return /*#__PURE__*/React.createElement(Link, {\n        to: \"\".concat(process.env.PUBLIC_URL, \"/blog/single/\").concat(post.id),\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 45\n        }\n      }, isIsotope ? /*#__PURE__*/React.createElement(\"img\", {\n        src: \"\".concat(process.env.PUBLIC_URL + '/' + post.image[index]),\n        alt: \"post_image\",\n        width: \"300\",\n        height: \"300\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 53\n        }\n      }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"lazy-overlay bg-3\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 57\n        }\n      }), /*#__PURE__*/React.createElement(LazyLoadImage, {\n        alt: \"post_image\",\n        src: \"\".concat(process.env.PUBLIC_URL + '/' + post.image[index]),\n        threshold: 500,\n        effect: \"blur\",\n        width: 300,\n        height: 300,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 57\n        }\n      })));\n    }))) : /*#__PURE__*/React.createElement(\"figure\", {\n      className: \"entry-media\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"\".concat(process.env.PUBLIC_URL, \"/blog/single/\").concat(post.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 37\n      }\n    }, isIsotope ? /*#__PURE__*/React.createElement(\"img\", {\n      src: \"\".concat(process.env.PUBLIC_URL + '/' + post.image[0]),\n      alt: \"post_image\",\n      width: \"300\",\n      height: \"300\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 45\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lazy-overlay bg-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(LazyLoadImage, {\n      alt: \"post_image\",\n      src: \"\".concat(process.env.PUBLIC_URL + '/' + post.image[0]),\n      threshold: 500,\n      effect: \"blur\",\n      width: 300,\n      height: 300,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 49\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-\".concat(12 - imageSize),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"entry-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"entry-meta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"entry-author\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 33\n      }\n    }, \"by \", /*#__PURE__*/React.createElement(Link, {\n      to: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 40\n      }\n    }, post.author)), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"meta-separator\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }\n    }, \"|\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 33\n      }\n    }, date.toLocaleDateString('en-US', options)), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"meta-separator\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    }, \"|\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 33\n      }\n    }, post.comments, \" Comments\")), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"entry-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }\n    }, post.title), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"entry-cats\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    }, \"in\\xA0\", post.category.map(function (cat, index) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"#\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 41\n        }\n      }, cat), index < post.category.length - 1 ? ', ' : '');\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"entry-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 33\n      }\n    }, post.content), /*#__PURE__*/React.createElement(Link, {\n      to: \"\".concat(process.env.PUBLIC_URL, \"/blog/single/\").concat(post.id),\n      className: \"read-more\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 33\n      }\n    }, \"Continue Reading\"))))));\n  } else {\n    return '';\n  }\n}\n\nexport default React.memo(PostThree);","map":{"version":3,"sources":["C:/Users/Eddi/Documents/Proyectos/DS2/Eros-Shop/Nueva carpeta/src/components/features/post/post-two.jsx"],"names":["React","Link","LazyLoadImage","OwlCarousel","PostThree","props","post","imageSize","isIsotope","date","Date","options","year","month","day","timeZone","type","process","env","PUBLIC_URL","id","image","Array","isArray","map","item","index","author","toLocaleDateString","comments","title","category","cat","length","content","memo"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport OwlCarousel from '../owl-carousel';\r\n\r\nfunction PostThree( props ) {\r\n    const { post, imageSize = 4, isIsotope = false } = props;\r\n\r\n    if ( post ) {\r\n        let date = new Date( post.date );\r\n        let options = { year: \"numeric\", month: \"short\", day: \"2-digit\", timeZone: \"UTC\" };\r\n\r\n        return (\r\n            <article className=\"entry entry-list\">\r\n                <div className=\"row align-items-center\">\r\n                    <div className={ `col-md-${imageSize}` }>\r\n                        { \"video\" === post.type ?\r\n                            <figure className=\"entry-media entry-video\">\r\n                                <Link to={ `${process.env.PUBLIC_URL}/blog/single/${post.id}` }>\r\n                                    { isIsotope ?\r\n                                        <img src={ `${process.env.PUBLIC_URL + '/' + post.image[ 0 ]}` } alt=\"post_image\" width=\"300\" height=\"300\" />\r\n                                        :\r\n                                        <>\r\n                                            <div className=\"lazy-overlay bg-3\"></div>\r\n\r\n                                            <LazyLoadImage\r\n                                                alt=\"post_image\"\r\n                                                src={ `${process.env.PUBLIC_URL + '/' + post.image[ 0 ]}` }\r\n                                                threshold={ 500 }\r\n                                                effect=\"blur\"\r\n                                                width={ 300 }\r\n                                                height={ 300 }\r\n                                            />\r\n                                        </>\r\n                                    }\r\n                                </Link>\r\n                            </figure> :\r\n\r\n                            Array.isArray( post.image ) && \"gallery\" === post.type ?\r\n                                <figure className=\"entry-media\">\r\n                                    <OwlCarousel adClass=\"owl-simple owl-light owl-nav-inside cols-1\" carouselId={ \"post_two\" + post.id }>\r\n                                        { post.image.map( ( item, index ) =>\r\n                                            <Link to={ `${process.env.PUBLIC_URL}/blog/single/${post.id}` } key={ index }>\r\n                                                { isIsotope ?\r\n                                                    <img src={ `${process.env.PUBLIC_URL + '/' + post.image[ index ]}` } alt=\"post_image\" width=\"300\" height=\"300\" />\r\n                                                    :\r\n                                                    <>\r\n                                                        <div className=\"lazy-overlay bg-3\"></div>\r\n\r\n                                                        <LazyLoadImage\r\n                                                            alt=\"post_image\"\r\n                                                            src={ `${process.env.PUBLIC_URL + '/' + post.image[ index ]}` }\r\n                                                            threshold={ 500 }\r\n                                                            effect=\"blur\"\r\n                                                            width={ 300 }\r\n                                                            height={ 300 }\r\n                                                        />\r\n                                                    </>\r\n                                                }\r\n                                            </Link>\r\n                                        ) }\r\n                                    </OwlCarousel>\r\n                                </figure> :\r\n\r\n                                <figure className=\"entry-media\">\r\n                                    <Link to={ `${process.env.PUBLIC_URL}/blog/single/${post.id}` }>\r\n                                        { isIsotope ?\r\n                                            <img src={ `${process.env.PUBLIC_URL + '/' + post.image[ 0 ]}` } alt=\"post_image\" width=\"300\" height=\"300\" />\r\n                                            :\r\n                                            <>\r\n                                                <div className=\"lazy-overlay bg-3\"></div>\r\n\r\n                                                <LazyLoadImage\r\n                                                    alt=\"post_image\"\r\n                                                    src={ `${process.env.PUBLIC_URL + '/' + post.image[ 0 ]}` }\r\n                                                    threshold={ 500 }\r\n                                                    effect=\"blur\"\r\n                                                    width={ 300 }\r\n                                                    height={ 300 }\r\n                                                />\r\n                                            </>\r\n                                        }\r\n                                    </Link>\r\n                                </figure>\r\n                        }\r\n                    </div>\r\n\r\n                    <div className={ `col-md-${12 - imageSize}` }>\r\n                        <div className=\"entry-body\">\r\n                            <div className=\"entry-meta\">\r\n                                <span className=\"entry-author\">\r\n                                    by <Link to=\"#\">{ post.author }</Link>\r\n                                </span>\r\n                                <span className=\"meta-separator\">|</span>\r\n                                <Link to=\"#\">{ date.toLocaleDateString( 'en-US', options ) }</Link>\r\n                                <span className=\"meta-separator\">|</span>\r\n                                <Link to=\"#\">{ post.comments } Comments</Link>\r\n                            </div>\r\n\r\n                            <h2 className=\"entry-title\">\r\n                                { post.title }\r\n                            </h2>\r\n\r\n                            <div className=\"entry-cats\">\r\n                                in&nbsp;\r\n                            { post.category.map( ( cat, index ) => (\r\n                                    <span key={ index }>\r\n                                        <Link to=\"#\">{ cat }</Link>\r\n                                        { index < post.category.length - 1 ? ', ' : '' }\r\n                                    </span>\r\n                                ) ) }\r\n                            </div>\r\n\r\n                            <div className=\"entry-content\">\r\n                                <p>{ post.content }</p>\r\n                                <Link to={ `${process.env.PUBLIC_URL}/blog/single/${post.id}` } className=\"read-more\">Continue Reading</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </article>\r\n        );\r\n    } else {\r\n        return '';\r\n    }\r\n}\r\n\r\nexport default React.memo( PostThree );"]},"metadata":{},"sourceType":"module"}